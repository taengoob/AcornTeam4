<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.board">
	
	<resultMap id="test" type="BoardDTO" >
		<result property="boardContentId" column="BOARD_CONTENT_ID"/>
		<result property="boardCategory" column="BOARD_CATEGORY"/>
		<result property="boardUserId" column="BOARD_USER_ID"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="boardRegDate" column="BOARD_REG_DATE"/>
		<result property="boardUpdateDate" column="BOARD_UPDATE_DATE"/>
		<result property="boardDelDate" column="BOARD_DEL_DATE"/>
		<result property="boardHitCount" column="BOARD_HIT_COUNT"/>
		<result property="boardSubCategory" column="BOARD_SUB_CATEGORY"/>
		<result property="boardPreviewImg" column="BOARD_PREVIEW_IMG"/>
		<result property="boardRefContentId" column="BOARD_REF_CONTENT_ID"/>
		<result property="boardRealContentId" column="BOARD_REAL_CONTENT_ID"/>
		<result property="boardReplyCount" column="BOARD_REPLY_COUNT"/>
		<result property="boardRelpyNextId" column="BOARD_REPLY_NEXT_ID"/>
	</resultMap>
	
	<select id="boardList" parameterType="String" resultMap="test">
		SELECT
			SUBSTR(f.BOARD_CONTENT_ID,15,5) BOARD_CONTENT_ID, 
			f.BOARD_CATEGORY, 
			f.BOARD_USER_ID, 
			f.BOARD_TITLE, 
			f.BOARD_CONTENT, 
			f.BOARD_REG_DATE, 
			f.BOARD_UPDATE_DATE, 
			f.BOARD_DEL_DATE, 
			f.BOARD_HIT_COUNT,
			f.BOARD_SUB_CATEGORY,
			f.BOARD_PREVIEW_IMG,
			(SELECT COUNT(*) FROM BOARD_DETATIL
			START WITH BOARD_REF_CONTENT_ID= f.BOARD_CONTENT_ID
			CONNECT BY PRIOR BOARD_CONTENT_ID = BOARD_REF_CONTENT_ID) BOARD_REPLY_COUNT
		FROM
			BOARD_DETATIL f, BOARD_DETATIL s
		WHERE
			f.BOARD_CONTENT_ID = s.BOARD_CONTENT_ID
		AND
			f.BOARD_CATEGORY = #{category}
		AND
			f.BOARD_SUB_CATEGORY = '공지사항'
		AND
			f.BOARD_DEL_DATE IS NULL
		order by 1 DESC
	</select>
	
	<select id="boardInfo" parameterType="String" resultMap="test">
		SELECT
			SUBSTR(BOARD_CONTENT_ID,15,5) BOARD_CONTENT_ID,
			BOARD_CATEGORY, 
			BOARD_USER_ID, 
			BOARD_TITLE, 
			BOARD_CONTENT, 
			BOARD_REG_DATE, 
			BOARD_UPDATE_DATE, 
			BOARD_DEL_DATE, 
			BOARD_HIT_COUNT,
			BOARD_SUB_CATEGORY,
			BOARD_CONTENT_ID BOARD_REAL_CONTENT_ID
		FROM
			BOARD_DETATIL
		WHERE
			SUBSTR(BOARD_CONTENT_ID,15,5) = #{ContentId}
		AND
			BOARD_TITLE IS NOT NULL
	</select>
	
	<update id="increaseHitCount" parameterType="String">
		UPDATE
			BOARD_DETATIL
		SET
			BOARD_HIT_COUNT = BOARD_HIT_COUNT+1
		WHERE
			SUBSTR(BOARD_CONTENT_ID,15,5) = #{ContentId}
	</update>	
	
	<insert id="boardWrite" parameterType="BoardDTO">
		INSERT INTO BOARD_DETATIL
			( 
			BOARD_CONTENT_ID,
			BOARD_CATEGORY, 
			BOARD_USER_ID, 
			BOARD_TITLE, 
			BOARD_CONTENT,
			BOARD_PREVIEW_IMG
			)
		VALUES
			(
			#{boardContentId},
			#{boardCategory},
			#{boardUserId},
			#{boardTitle},
			#{boardContent},
			#{boardPreviewImg}
			)
	</insert>
	
	<select id="boardCount" resultType="int">
		SELECT 
			COUNT(*) 
		FROM
			BOARD_DETATIL
		WHERE
			BOARD_DEL_DATE IS NULL
		AND
			BOARD_TITLE IS NOT NULL
		
	</select>
	
	<update id="boardReWrite" parameterType="BoardDTO">
		UPDATE 
			BOARD_DETATIL 
		SET
			BOARD_CATEGORY = #{boardCategory}, 
			BOARD_TITLE = #{boardTitle}, 
			BOARD_CONTENT = #{boardContent},
			BOARD_UPDATE_DATE = (SELECT FN_GET_KST_DATE() FROM DUAL),
			BOARD_PREVIEW_IMG = #{boardPreviewImg}
		WHERE
			SUBSTR(BOARD_CONTENT_ID,15,5) = #{boardContentId}
	</update>
	
	<update id="boardDelete" parameterType="String">
		UPDATE 
			BOARD_DETATIL 
		SET
			BOARD_DEL_DATE = (SELECT FN_GET_KST_DATE() FROM DUAL)
		WHERE
			SUBSTR(BOARD_CONTENT_ID,15,5) = #{ContentId}
	</update>
	
	<select id="boardMove" parameterType="HashMap" resultMap="test">
		SELECT  
			SUBSTR(BOARD_CONTENT_ID,15,5) BOARD_CONTENT_ID, 
			BOARD_CATEGORY, 
			BOARD_USER_ID, 
			BOARD_TITLE, 
			BOARD_CONTENT, 
			BOARD_REG_DATE, 
			BOARD_UPDATE_DATE, 
			BOARD_DEL_DATE, 
			BOARD_HIT_COUNT
		FROM
			BOARD_DETATIL
        WHERE
            TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5)) =
            ( 
            <if test="Move.equals('Prev')">
             SELECT 
            	MAX(TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5))) 
             FROM 
            	BOARD_DETATIL
             WHERE 
             	TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5)) &lt; TO_NUMBER(#{ContentId})
            </if>
            <if test="Move.equals('Next')">
             SELECT 
            	MIN(TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5))) 
             FROM 
            	BOARD_DETATIL
             WHERE 
             	TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5)) &gt; TO_NUMBER(#{ContentId})
            </if>
             AND 
             	BOARD_DEL_DATE IS NULL
             AND
				BOARD_TITLE IS NOT NULL
             )
	</select>
	
	<select id="boardEnd" resultType="int">
		SELECT  
			MAX(TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5)))  BOARD_CONTENT_ID
		FROM
			BOARD_DETATIL
        WHERE
        	BOARD_DEL_DATE IS NULL
		AND
			BOARD_TITLE IS NOT NULL
	</select>
	
	<select id="boardStart" resultType="int">
		SELECT  
			MIN(TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5)))  BOARD_CONTENT_ID
		FROM
			BOARD_DETATIL
        WHERE
        	BOARD_DEL_DATE IS NULL
        AND
			BOARD_TITLE IS NOT NULL
	</select>
	
	<select id="boardPageList" parameterType="HashMap" resultMap="test">
		SELECT
			SUBSTR(f.BOARD_CONTENT_ID,15,5) BOARD_CONTENT_ID, 
			f.BOARD_CATEGORY, 
			f.BOARD_USER_ID, 
			f.BOARD_TITLE, 
			f.BOARD_CONTENT, 
			f.BOARD_REG_DATE, 
			f.BOARD_UPDATE_DATE, 
			f.BOARD_DEL_DATE, 
			f.BOARD_HIT_COUNT,
			f.BOARD_SUB_CATEGORY,
			f.BOARD_PREVIEW_IMG,
			(SELECT COUNT(*) FROM BOARD_DETATIL
			START WITH BOARD_REF_CONTENT_ID= f.BOARD_CONTENT_ID
			CONNECT BY PRIOR BOARD_CONTENT_ID = BOARD_REF_CONTENT_ID) BOARD_REPLY_COUNT
		FROM
			BOARD_DETATIL f, BOARD_DETATIL s
		WHERE
			f.BOARD_CONTENT_ID = s.BOARD_CONTENT_ID
		AND
			f.BOARD_CATEGORY = #{category}
		AND
			f.BOARD_DEL_DATE IS NULL
		order by 1 DESC
	</select>
	
	<insert id="replyAdd" parameterType="HashMap">
		
		INSERT INTO BOARD_DETATIL
			(
			BOARD_CONTENT_ID, 
			BOARD_USER_ID, 
			BOARD_CONTENT, 
			BOARD_REG_DATE,
			BOARD_REF_CONTENT_ID 
			)
		 VALUES
		 	(
		 	#{replyId},
		 	#{userId},
		 	#{replyContent},
		 	(SELECT FN_GET_KST_DATE() FROM DUAL),
		 	#{refcontentId}
		 	)
	</insert>
		
	<select id="replySelect" parameterType="String" resultMap="test">
		SELECT
			SUBSTR(BOARD_CONTENT_ID,15,5) BOARD_CONTENT_ID, 
			BOARD_USER_ID, 
			BOARD_CONTENT, 
			BOARD_REG_DATE, 
			BOARD_UPDATE_DATE, 
			BOARD_DEL_DATE, 
			BOARD_REF_CONTENT_ID,
			BOARD_CONTENT_ID BOARD_REAL_CONTENT_ID
		FROM
			BOARD_DETATIL
		WHERE
			BOARD_CONTENT_ID = #{replyId}
	</select>
	
	<select id="replyList" parameterType="String" resultMap="test">
		SELECT
			SUBSTR(BOARD_CONTENT_ID,15,5) BOARD_CONTENT_ID, 
			BOARD_USER_ID, 
			BOARD_CONTENT, 
			BOARD_REG_DATE, 
			BOARD_UPDATE_DATE, 
			BOARD_DEL_DATE, 
			BOARD_REF_CONTENT_ID,
			BOARD_CONTENT_ID BOARD_REAL_CONTENT_ID
		FROM
			BOARD_DETATIL
		WHERE
			SUBSTR(BOARD_REF_CONTENT_ID,15,5) = #{ContentId}
		AND
			BOARD_TITLE IS NULL
		ORDER BY 1 ASC
	</select>
	
	<select id="replyCount" resultType="int">
		SELECT 
			COUNT(*)
		FROM 
			BOARD_DETATIL
		START WITH 
			SUBSTR(BOARD_REF_CONTENT_ID,15,5) = #{ContentId}
		CONNECT BY PRIOR 
			SUBSTR(BOARD_CONTENT_ID,15,5) = SUBSTR(BOARD_REF_CONTENT_ID,15,5)
	</select>
	
	<select id="replyNextId" parameterType="map" resultMap="test">
		SELECT
			BOARD_CONTENT_ID BOARD_REPLY_NEXT_ID
		FROM
			BOARD_DETATIL
		WHERE
			TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5)) =
			(
			 SELECT 
            	MAX(TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5))) 
             FROM 
            	BOARD_DETATIL
             WHERE 
             	TO_NUMBER(SUBSTR(BOARD_CONTENT_ID,15,5)) &lt; TO_NUMBER(SUBSTR(#{replyId},15,5))
             AND
				BOARD_REF_CONTENT_ID = #{refContentId}
			)
	</select>
	
	<update id="replyDelete" parameterType="String">
		UPDATE 
			BOARD_DETATIL 
		SET
			BOARD_DEL_DATE = (SELECT FN_GET_KST_DATE() FROM DUAL)
		WHERE
			BOARD_CONTENT_ID = #{replyId}
	</update>
	
	<update id="replyUpdate" parameterType="HashMap">
		UPDATE 
			BOARD_DETATIL 
		SET
			BOARD_CONTENT = #{replyContent},
			BOARD_UPDATE_DATE = (SELECT FN_GET_KST_DATE() FROM DUAL)
		WHERE
			BOARD_CONTENT_ID = #{replyId}
	</update>
	
</mapper>